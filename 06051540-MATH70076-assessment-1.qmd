---
title: "06051540-MATH70076-assessment-1"
subtitle: 'MSc in Statistics 2025/26, Imperial College London'
author: "Justin Upson"
format:
  html:
    toc: true
    highlight: tango
    self-contained: true
    df-print: paged
  pdf: default
format-links: false
bibliography: ref.bib 
---

# Question 1

**For $\xi \neq 0$:** 

We know from the cumulative distribution function that:
\begin{equation}
  F(x;\sigma,\xi,u) = 1-\left(1+\frac{\xi(x-u)}{\sigma}\right)_+^{-1/\xi}
\end{equation}
Rewriting to make $x$ the subject:
\begin{align}
\left(1+\frac{\xi(x-u)}{\sigma}\right)_+^{-1/\xi}&=(1-F) \\
1&=(1-F)\left(1+\frac{\xi(x-u)}{\sigma}\right)_+^{1/\xi} \\
(1-F)^{-1}&=\left(1+\frac{\xi(x-u)}{\sigma}\right)_+^{1/\xi} \\
\end{align}
For $\xi > 0$, we see that $\left(1+\frac{\xi(x-u)}{\sigma}\right)^{1/\xi}>0$, so we get:
\begin{align}
(1-F)^{-\xi}&=1+\frac{\xi(x-u)}{\sigma} \\
(1-F)^{-\xi}-1&=\frac{\xi(x-u)}{\sigma} \\
\left(\left(1-F\right)^{-\xi}-1\right)\times \frac{\sigma}{\xi} &= x-u\\
u+\left(\left(1-F\right)^{-\xi}-1\right)\times \frac{\sigma}{\xi} &= x\\
\end{align}
So $F_X^{-1}=u+\left(\left(1-x\right)^{-\xi}-1\right)\times \frac{\sigma}{\xi}$
But given our inputs of $F_X^{-1}(x)$ vary between 0 and 1, we can write that:
\begin{equation}
F_X^{-1}(x)=u+\left(\left(x\right)^{-\xi}-1\right)\times \frac{\sigma}{\xi}
\end{equation}

For $\xi < 0$, we know that we have quickly decaying tails with finite upper endpoint. With $x>u$, this finite endpoint is met when
\begin{align}
1+\frac{\xi(x-u)}{\sigma}&=0 \\
\frac{\xi(x-u)}{\sigma}&=-1 \\
x-u&=-\frac{\sigma}{\xi} \\
x&=u-\frac{\sigma}{\xi} \\
\end{align}
So for $x > u-\frac{\sigma}{\xi}$, produced by the inverse function above we discard the values of $x$.

**For $\xi = 0$:**
\begin{align}
F&=1-exp\left(-\frac{x-u}{\sigma}\right) \\
exp\left(-\frac{x-u}{\sigma}\right)&=1-F \\
-\frac{x-u}{\sigma}&=ln(1-F) \\
-x+u&=\sigma ln(1-F) \\
u-\sigma ln(1-F) &= x \\
\end{align}
So $F_X^{-1}=u-\sigma ln(1-x)$

But given our inputs of $F_X^{-1}(x)$ vary between 0 and 1, we can write that:
\begin{equation}
F_X^{-1}(x)=u-\sigma ln(x)
\end{equation}

# Question 2a

Defining the quantile function, and using the basis of the cdf from question 1, we get that:
```{r}
qgpd <- function (p, sigma=1, xi=0, u=0){
  if (p<0||p>1){
    return(warning("NaNs produced - p must be between 0 and 1")) 
  }
  else if (sigma<=0){
    return(warning("NaNs produced - sigma must be greater than 0")) 
  }
  else if (xi != 0){
    return(u + ((1-p)^(-xi)-1) * sigma / xi)
  } else {
    return(u - sigma * log(1-p))
  }
}
```

By default, the expected inputs for the function are sigma=1, xi=0, u=0. The code also prevents inputs where p values are less than 0, where p values exceed 1, or where sigma is less than or equal to 0.

The expected output is a real number greater than u that is unbounded if xi is greater than or equal to 0. The expected output is less than u - sigma/xi if xi is less than 0.

Regarding the behaviours of the quantile function:
The larger the value of xi, the slower the tail decays. In this for xi $>=$ 0 the functions output approaches infinity as p -> 1.
For xi < 0, the functions output has a maximum at u - sigma/xi (when p -> 1).
For larger values of sigma, the slower the tail decays.


# Question 2b

```{r}
qgpd(0.5,2,-0.4,1.5)
qgpd(0.75,2,-0.4,1.5)
qgpd(0.99,2,-0.4,1.5)
```


# Question 3

On the below graph are the various 
```{r}
#| echo: false

# Reading our inputs:
gpd_parameters <- read.csv("gpd_parameters.csv")
gpd_samples <- read.csv("gpd_samples.csv")

# Finding our p-values:
dgpd <- function(x, sigma=1, xi=0, u=0){
  if (x<u){
    return(warning("NaNs produced - x must be greater than u")) 
  }
  else if (sigma<=0){
    return(warning("NaNs produced - sigma must be greater than 0")) 
  }
  else if (xi != 0){
    return(max((1/sigma)*(1+xi*(x-u)/sigma),0)^(-1/xi-1))
  } else {
    return((1/sigma)*exp(-(x-u)/sigma))
  }
}

row <- match(gpd_samples$set_id, gpd_parameters$id)

plot(
x = gpd_samples$value, 
y = dgpd(
  gpd_samples$value, 
  gpd_parameters$sigma[row], 
  gpd_parameters$xi[row],
  gpd_parameters$u[row]),
xlab = "Samples",
ylab = "Density",
col = as.factor(gpd_samples$set_id)      
)


```





---

